<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-" "http:">
<mapper namespace="com.tuibi.dianwan.mapper.TMarqueeMapper">
  <resultMap id="BaseResultMap" type="com.tuibi.dianwan.entity.TMarquee">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="play_scene" jdbcType="VARCHAR" property="playScene" />
    <result column="msg" jdbcType="VARCHAR" property="msg" />
    <result column="open_platform" jdbcType="INTEGER" property="openPlatform" />
    <result column="link" jdbcType="VARCHAR" property="link" />
    <result column="op_account" jdbcType="VARCHAR" property="opAccount" />
    <result column="interval_sec" jdbcType="INTEGER" property="intervalSec" />
    <result column="send_cnt" jdbcType="INTEGER" property="sendCnt" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.tuibi.dianwan.entity.TMarquee">
    <!--
      WARNING - @mbg.generated
    -->
    <result column="notify_users" jdbcType="LONGVARCHAR" property="notifyUsers" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    id, play_scene, msg, open_platform, link, op_account, interval_sec, send_cnt, create_time, 
    update_time
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    notify_users
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.tuibi.dianwan.entity.TMarqueeExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_marquee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.tuibi.dianwan.entity.TMarqueeExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_marquee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.tuibi.dianwan.entity.TMarqueeExample">
    <!--
      WARNING - @mbg.generated
    -->
    delete from t_marquee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.tuibi.dianwan.entity.TMarqueeExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
    -->
    select count(*) from t_marquee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update t_marquee
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.playScene != null">
        play_scene = #{record.playScene,jdbcType=VARCHAR},
      </if>
      <if test="record.msg != null">
        msg = #{record.msg,jdbcType=VARCHAR},
      </if>
      <if test="record.openPlatform != null">
        open_platform = #{record.openPlatform,jdbcType=INTEGER},
      </if>
      <if test="record.link != null">
        link = #{record.link,jdbcType=VARCHAR},
      </if>
      <if test="record.opAccount != null">
        op_account = #{record.opAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.intervalSec != null">
        interval_sec = #{record.intervalSec,jdbcType=INTEGER},
      </if>
      <if test="record.sendCnt != null">
        send_cnt = #{record.sendCnt,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.notifyUsers != null">
        notify_users = #{record.notifyUsers,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update t_marquee
    set id = #{record.id,jdbcType=INTEGER},
      play_scene = #{record.playScene,jdbcType=VARCHAR},
      msg = #{record.msg,jdbcType=VARCHAR},
      open_platform = #{record.openPlatform,jdbcType=INTEGER},
      link = #{record.link,jdbcType=VARCHAR},
      op_account = #{record.opAccount,jdbcType=VARCHAR},
      interval_sec = #{record.intervalSec,jdbcType=INTEGER},
      send_cnt = #{record.sendCnt,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      notify_users = #{record.notifyUsers,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update t_marquee
    set id = #{record.id,jdbcType=INTEGER},
      play_scene = #{record.playScene,jdbcType=VARCHAR},
      msg = #{record.msg,jdbcType=VARCHAR},
      open_platform = #{record.openPlatform,jdbcType=INTEGER},
      link = #{record.link,jdbcType=VARCHAR},
      op_account = #{record.opAccount,jdbcType=VARCHAR},
      interval_sec = #{record.intervalSec,jdbcType=INTEGER},
      send_cnt = #{record.sendCnt,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>