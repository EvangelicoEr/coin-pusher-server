<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-" "http:">
<mapper namespace="com.tuibi.dianwan.mapper.UtilMemberLevelMapper">
  <resultMap id="BaseResultMap" type="com.tuibi.dianwan.entity.UtilMemberLevel">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="member_level_id" jdbcType="INTEGER" property="memberLevelId" />
    <result column="member_level_logo" jdbcType="VARCHAR" property="memberLevelLogo" />
    <result column="member_level_name" jdbcType="VARCHAR" property="memberLevelName" />
    <result column="member_level_num" jdbcType="INTEGER" property="memberLevelNum" />
    <result column="member_level_money" jdbcType="INTEGER" property="memberLevelMoney" />
    <result column="member_reward_num" jdbcType="INTEGER" property="memberRewardNum" />
    <result column="recharge_gift_num" jdbcType="DOUBLE" property="rechargeGiftNum" />
    <result column="lrsj" jdbcType="VARCHAR" property="lrsj" />
    <result column="lrzh" jdbcType="VARCHAR" property="lrzh" />
    <result column="zt" jdbcType="INTEGER" property="zt" />
    <result column="bz" jdbcType="VARCHAR" property="bz" />
    <result column="gxsj" jdbcType="VARCHAR" property="gxsj" />
    <result column="member_extra" jdbcType="VARCHAR" property="memberExtra" />
    <result column="member_quicken" jdbcType="VARCHAR" property="memberQuicken" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.tuibi.dianwan.entity.UtilMemberLevel">
    <!--
      WARNING - @mbg.generated
    -->
    <result column="level_rules" jdbcType="LONGVARCHAR" property="levelRules" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    member_level_id, member_level_logo, member_level_name, member_level_num, member_level_money, 
    member_reward_num, recharge_gift_num, lrsj, lrzh, zt, bz, gxsj, member_extra, member_quicken
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    level_rules
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.tuibi.dianwan.entity.UtilMemberLevelExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from util_member_level
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.tuibi.dianwan.entity.UtilMemberLevelExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from util_member_level
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.tuibi.dianwan.entity.UtilMemberLevelExample">
    <!--
      WARNING - @mbg.generated
    -->
    delete from util_member_level
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.tuibi.dianwan.entity.UtilMemberLevelExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
    -->
    select count(*) from util_member_level
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update util_member_level
    <set>
      <if test="record.memberLevelId != null">
        member_level_id = #{record.memberLevelId,jdbcType=INTEGER},
      </if>
      <if test="record.memberLevelLogo != null">
        member_level_logo = #{record.memberLevelLogo,jdbcType=VARCHAR},
      </if>
      <if test="record.memberLevelName != null">
        member_level_name = #{record.memberLevelName,jdbcType=VARCHAR},
      </if>
      <if test="record.memberLevelNum != null">
        member_level_num = #{record.memberLevelNum,jdbcType=INTEGER},
      </if>
      <if test="record.memberLevelMoney != null">
        member_level_money = #{record.memberLevelMoney,jdbcType=INTEGER},
      </if>
      <if test="record.memberRewardNum != null">
        member_reward_num = #{record.memberRewardNum,jdbcType=INTEGER},
      </if>
      <if test="record.rechargeGiftNum != null">
        recharge_gift_num = #{record.rechargeGiftNum,jdbcType=DOUBLE},
      </if>
      <if test="record.lrsj != null">
        lrsj = #{record.lrsj,jdbcType=VARCHAR},
      </if>
      <if test="record.lrzh != null">
        lrzh = #{record.lrzh,jdbcType=VARCHAR},
      </if>
      <if test="record.zt != null">
        zt = #{record.zt,jdbcType=INTEGER},
      </if>
      <if test="record.bz != null">
        bz = #{record.bz,jdbcType=VARCHAR},
      </if>
      <if test="record.gxsj != null">
        gxsj = #{record.gxsj,jdbcType=VARCHAR},
      </if>
      <if test="record.memberExtra != null">
        member_extra = #{record.memberExtra,jdbcType=VARCHAR},
      </if>
      <if test="record.memberQuicken != null">
        member_quicken = #{record.memberQuicken,jdbcType=VARCHAR},
      </if>
      <if test="record.levelRules != null">
        level_rules = #{record.levelRules,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update util_member_level
    set member_level_id = #{record.memberLevelId,jdbcType=INTEGER},
      member_level_logo = #{record.memberLevelLogo,jdbcType=VARCHAR},
      member_level_name = #{record.memberLevelName,jdbcType=VARCHAR},
      member_level_num = #{record.memberLevelNum,jdbcType=INTEGER},
      member_level_money = #{record.memberLevelMoney,jdbcType=INTEGER},
      member_reward_num = #{record.memberRewardNum,jdbcType=INTEGER},
      recharge_gift_num = #{record.rechargeGiftNum,jdbcType=DOUBLE},
      lrsj = #{record.lrsj,jdbcType=VARCHAR},
      lrzh = #{record.lrzh,jdbcType=VARCHAR},
      zt = #{record.zt,jdbcType=INTEGER},
      bz = #{record.bz,jdbcType=VARCHAR},
      gxsj = #{record.gxsj,jdbcType=VARCHAR},
      member_extra = #{record.memberExtra,jdbcType=VARCHAR},
      member_quicken = #{record.memberQuicken,jdbcType=VARCHAR},
      level_rules = #{record.levelRules,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update util_member_level
    set member_level_id = #{record.memberLevelId,jdbcType=INTEGER},
      member_level_logo = #{record.memberLevelLogo,jdbcType=VARCHAR},
      member_level_name = #{record.memberLevelName,jdbcType=VARCHAR},
      member_level_num = #{record.memberLevelNum,jdbcType=INTEGER},
      member_level_money = #{record.memberLevelMoney,jdbcType=INTEGER},
      member_reward_num = #{record.memberRewardNum,jdbcType=INTEGER},
      recharge_gift_num = #{record.rechargeGiftNum,jdbcType=DOUBLE},
      lrsj = #{record.lrsj,jdbcType=VARCHAR},
      lrzh = #{record.lrzh,jdbcType=VARCHAR},
      zt = #{record.zt,jdbcType=INTEGER},
      bz = #{record.bz,jdbcType=VARCHAR},
      gxsj = #{record.gxsj,jdbcType=VARCHAR},
      member_extra = #{record.memberExtra,jdbcType=VARCHAR},
      member_quicken = #{record.memberQuicken,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>