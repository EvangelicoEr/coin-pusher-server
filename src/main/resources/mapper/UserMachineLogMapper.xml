<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-" "http:">
<mapper namespace="com.tuibi.dianwan.mapper.UserMachineLogMapper">
  <resultMap id="BaseResultMap" type="com.tuibi.dianwan.entity.UserMachineLog">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="log_id" jdbcType="VARCHAR" property="logId" />
    <result column="user_code" jdbcType="VARCHAR" property="userCode" />
    <result column="machine_id" jdbcType="VARCHAR" property="machineId" />
    <result column="machine_name" jdbcType="VARCHAR" property="machineName" />
    <result column="log_num1" jdbcType="INTEGER" property="logNum1" />
    <result column="log_num2" jdbcType="INTEGER" property="logNum2" />
    <result column="log_img" jdbcType="VARCHAR" property="logImg" />
    <result column="is_grant" jdbcType="INTEGER" property="isGrant" />
    <result column="catch_w" jdbcType="CHAR" property="catchW" />
    <result column="lrsj" jdbcType="VARCHAR" property="lrsj" />
    <result column="lrzh" jdbcType="VARCHAR" property="lrzh" />
    <result column="zt" jdbcType="VARCHAR" property="zt" />
    <result column="bz" jdbcType="VARCHAR" property="bz" />
    <result column="gxsj" jdbcType="VARCHAR" property="gxsj" />
    <result column="in_log_img" jdbcType="VARCHAR" property="inLogImg" />
    <result column="log_num3" jdbcType="INTEGER" property="logNum3" />
    <result column="log_num4" jdbcType="INTEGER" property="logNum4" />
    <result column="log_toubi_num" jdbcType="INTEGER" property="logToubiNum" />
    <result column="log_img_in" jdbcType="VARCHAR" property="logImgIn" />
    <result column="channel_id" jdbcType="INTEGER" property="channelId" />
    <result column="log_down" jdbcType="INTEGER" property="logDown" />
    <result column="machine_price" jdbcType="INTEGER" property="machinePrice" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    log_id, user_code, machine_id, machine_name, log_num1, log_num2, log_img, is_grant, 
    catch_w, lrsj, lrzh, zt, bz, gxsj, in_log_img, log_num3, log_num4, log_toubi_num, 
    log_img_in, channel_id, log_down, machine_price
  </sql>
  <select id="selectByExample" parameterType="com.tuibi.dianwan.entity.UserMachineLogExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_machine_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.tuibi.dianwan.entity.UserMachineLogExample">
    <!--
      WARNING - @mbg.generated
    -->
    delete from user_machine_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.tuibi.dianwan.entity.UserMachineLogExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
    -->
    select count(*) from user_machine_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update user_machine_log
    <set>
      <if test="record.logId != null">
        log_id = #{record.logId,jdbcType=VARCHAR},
      </if>
      <if test="record.userCode != null">
        user_code = #{record.userCode,jdbcType=VARCHAR},
      </if>
      <if test="record.machineId != null">
        machine_id = #{record.machineId,jdbcType=VARCHAR},
      </if>
      <if test="record.machineName != null">
        machine_name = #{record.machineName,jdbcType=VARCHAR},
      </if>
      <if test="record.logNum1 != null">
        log_num1 = #{record.logNum1,jdbcType=INTEGER},
      </if>
      <if test="record.logNum2 != null">
        log_num2 = #{record.logNum2,jdbcType=INTEGER},
      </if>
      <if test="record.logImg != null">
        log_img = #{record.logImg,jdbcType=VARCHAR},
      </if>
      <if test="record.isGrant != null">
        is_grant = #{record.isGrant,jdbcType=INTEGER},
      </if>
      <if test="record.catchW != null">
        catch_w = #{record.catchW,jdbcType=CHAR},
      </if>
      <if test="record.lrsj != null">
        lrsj = #{record.lrsj,jdbcType=VARCHAR},
      </if>
      <if test="record.lrzh != null">
        lrzh = #{record.lrzh,jdbcType=VARCHAR},
      </if>
      <if test="record.zt != null">
        zt = #{record.zt,jdbcType=VARCHAR},
      </if>
      <if test="record.bz != null">
        bz = #{record.bz,jdbcType=VARCHAR},
      </if>
      <if test="record.gxsj != null">
        gxsj = #{record.gxsj,jdbcType=VARCHAR},
      </if>
      <if test="record.inLogImg != null">
        in_log_img = #{record.inLogImg,jdbcType=VARCHAR},
      </if>
      <if test="record.logNum3 != null">
        log_num3 = #{record.logNum3,jdbcType=INTEGER},
      </if>
      <if test="record.logNum4 != null">
        log_num4 = #{record.logNum4,jdbcType=INTEGER},
      </if>
      <if test="record.logToubiNum != null">
        log_toubi_num = #{record.logToubiNum,jdbcType=INTEGER},
      </if>
      <if test="record.logImgIn != null">
        log_img_in = #{record.logImgIn,jdbcType=VARCHAR},
      </if>
      <if test="record.channelId != null">
        channel_id = #{record.channelId,jdbcType=INTEGER},
      </if>
      <if test="record.logDown != null">
        log_down = #{record.logDown,jdbcType=INTEGER},
      </if>
      <if test="record.machinePrice != null">
        machine_price = #{record.machinePrice,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update user_machine_log
    set log_id = #{record.logId,jdbcType=VARCHAR},
      user_code = #{record.userCode,jdbcType=VARCHAR},
      machine_id = #{record.machineId,jdbcType=VARCHAR},
      machine_name = #{record.machineName,jdbcType=VARCHAR},
      log_num1 = #{record.logNum1,jdbcType=INTEGER},
      log_num2 = #{record.logNum2,jdbcType=INTEGER},
      log_img = #{record.logImg,jdbcType=VARCHAR},
      is_grant = #{record.isGrant,jdbcType=INTEGER},
      catch_w = #{record.catchW,jdbcType=CHAR},
      lrsj = #{record.lrsj,jdbcType=VARCHAR},
      lrzh = #{record.lrzh,jdbcType=VARCHAR},
      zt = #{record.zt,jdbcType=VARCHAR},
      bz = #{record.bz,jdbcType=VARCHAR},
      gxsj = #{record.gxsj,jdbcType=VARCHAR},
      in_log_img = #{record.inLogImg,jdbcType=VARCHAR},
      log_num3 = #{record.logNum3,jdbcType=INTEGER},
      log_num4 = #{record.logNum4,jdbcType=INTEGER},
      log_toubi_num = #{record.logToubiNum,jdbcType=INTEGER},
      log_img_in = #{record.logImgIn,jdbcType=VARCHAR},
      channel_id = #{record.channelId,jdbcType=INTEGER},
      log_down = #{record.logDown,jdbcType=INTEGER},
      machine_price = #{record.machinePrice,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateMachineLogTuiBiNum" parameterType="map">
    update user_machine_log set log_toubi_num = log_toubi_num + #{num}
    <if test="logDown != null">
      , log_down = #{logDown}
    </if>
    where log_id = #{logId}
  </update>

  <update id="updateMachineGrantNum" parameterType="map">
    update user_machine_log set is_grant = is_grant + #{num}
    where log_id = #{logId}
  </update>

  <select id="getLastMachineLogRecord" parameterType="map" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from user_machine_log where user_code = #{userCode} and machine_id = #{machineId}
                                        order by lrsj desc limit 1
  </select>

  <select id="getMachineConsumptionRanking" parameterType="map" resultType="com.tuibi.dianwan.vo.RankUserInfoResp">
    select sum(log_toubi_num) as integralNum, user_code as userCode from user_machine_log
    where machine_id in
    <foreach close=")" collection="mids" item="id" open="(" separator=",">
        #{id}
    </foreach>
    and lrsj &gt;= #{stime} and lrsj &lt;= #{etime}
    group by user_code order by sum(log_toubi_num) desc limit ${topNum}
  </select>

  <select id="getMachineWinnerRanking" parameterType="map" resultType="com.tuibi.dianwan.vo.RankUserInfoResp">
    select sum(is_grant) as integralNum, user_code as userCode from user_machine_log
    where machine_id in
    <foreach close=")" collection="mids" item="id" open="(" separator=",">
        #{id}
    </foreach>
    and lrsj &gt;= #{stime} and lrsj &lt;= #{etime}
    group by user_code order by sum(is_grant) desc limit ${topNum}
  </select>

  <select id="getMachineCostByDay" parameterType="map" resultType="java.math.BigDecimal">
    select ifnull(sum(ifnull(log_toubi_num,0)),0) as logNum from user_machine_log t,machine_main m,machine_group g
    where t.machine_id=m.machine_id and m.group_id=g.group_id and g.group_type!=3
    and t.user_code=#{userCode} and m.machine_type=2 and to_days(t.gxsj) = to_days(now())
  </select>

  <select id="getMachineCostByWeek" parameterType="map" resultType="java.math.BigDecimal">
    select ifnull(sum(ifnull(log_toubi_num,0)),0) as logNum from user_machine_log t,machine_main m,machine_group g
    where t.machine_id=m.machine_id and m.group_id=g.group_id and
          g.group_type!=3 and t.user_code=#{userCode} and m.machine_type=2 and
          YEARWEEK(date_format(t.gxsj,'%Y-%m-%d')) =  YEARWEEK(now())
  </select>

  <select id="getMachineCostByMonth" parameterType="map" resultType="java.math.BigDecimal">
    select ifnull(sum(ifnull(log_toubi_num,0)),0) as logNum from user_machine_log t,machine_main m,machine_group g
    where t.machine_id=m.machine_id and m.group_id=g.group_id and
          g.group_type!=3 and t.user_code=#{userCode} and m.machine_type=2 and
          DATE_FORMAT(t.gxsj,'%Y%m') = DATE_FORMAT(now(),'%Y%m')
  </select>
</mapper>